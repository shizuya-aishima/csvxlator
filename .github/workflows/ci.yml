name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [created]

permissions:
  contents: read
  packages: write
  security-events: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: 8.12.1
    
    - name: Check code format
      run: ./gradlew spotlessCheck
    
    - name: Build with Gradle
      run: ./gradlew build
      
    - name: Run tests
      run: ./gradlew test
      
    - name: Generate coverage report
      run: ./gradlew jacocoTestReport
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./csvxlator-core/build/reports/jacoco/test/jacocoTestReport.xml
        
    - name: Run dependency check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'CsvXlator'
        path: '.'
        format: 'HTML'
        
    - name: Upload dependency check report
      uses: actions/upload-artifact@v4
      with:
        name: dependency-check-report
        path: reports
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: library-artifacts
        path: |
          csvxlator-core/build/libs/*.jar
          csvxlator-core/build/publications/
        retention-days: 90
      
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: csvxlator-core/build/reports/tests/
        retention-days: 90
        
    - name: Upload coverage reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports
        path: csvxlator-core/build/reports/jacoco/
        retention-days: 90
        
  publish:
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: 8.12.1
        
    - name: Publish package
      run: ./gradlew publish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 